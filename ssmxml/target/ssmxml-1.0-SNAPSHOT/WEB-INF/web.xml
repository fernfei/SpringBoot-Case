<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--
         指定Spring Bean的配置文件所在目录
         在web.xml中通过contextConfigLocation配置spring，
         contextConfigLocation参数定义了要装入的 Spring 配置文件。
    -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!-- Spring配置 -->
    <!-- 当系统启动的时候，spring需要进行一些资源加载或者配置，都需要使用此监听去做 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- Spring MVC配置 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-servlet.xml</param-value>
        </init-param>
    </servlet>
    <!--<url-pattern>*.html</url-pattern>
		这个拦截的意思是拦截到 xx.html的url全部转发到controller的 /xx路径
		比如IndexController的 /index路径
		这种localhost:8080 /项目名称 /controller的路径名再点html


		<url-pattern>/</url-pattern>也是同理拦截所有 /下的路径交给controller层
		所以这种方式项目只能通过localhost:8080/项目名/controller层路径
		不可以直接跟jsp页面访问
	  -->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>